/*!
 * NeepInsertable v0.1.0-alpha.2
 * (c) 2020 Fierflame
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@neep/core")):"function"==typeof define&&define.amd?define(["exports","@neep/core"],t):t((e=e||self).NeepInsertable={},e.Neep)}(this,(function(e,t){"use strict";function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}let r;function o(e){Reflect.defineProperty(e,"insertable",{value:e.delivered(r),enumerable:!0,configurable:!0})}function i(e,{insertable:n,childNodes:o}){const{name:i,insertable:s}=e;if(!i&&s instanceof a)return t.createElement(r,{value:s},...o);if(!i)return o;if(s instanceof a){const n=s.get(i);return n?t.createElement(r,{value:s},n.map(n=>t.createElement(n.component,e,...o))):null}if(!(n instanceof a))return o;const c=n.get(i);return c?c.map(n=>t.createElement(n.component,e,...o)):null}t.mSimple(i),t.mName("InsertView",i);var s=[function(){t.register("InsertView",i),t.register("insert-view",i)},function(){t.addContextConstructor(o)},function(){r=t.createDeliver()}];function c(e){}for(const e of s)e();class a{constructor(e){n(this,"parent",void 0),n(this,"_groups",t.encase(Object.create(null))),e instanceof a&&(this.parent=e)}add(e,t,n={}){"number"==typeof n&&(n={order:n});const r=this._groups;Array.isArray(t)||(t=[t]);const o=r[e]?[...r[e]]:[];o.push(...t.map(e=>Object.freeze({...n,component:e}))),o.sort(({order:e},{order:t})=>(e||0)-(t||0)),r[e]=o}remove(e,t){const n=this._groups,r=n[e];if(!r)return;if(!t)return void(n[e]=[]);const o=r.findIndex(e=>e.component===t);if(o<0)return;const i=[...r.slice(0,o),...r.slice(o+1)];n[e]=i}set(e,t,n={}){"number"==typeof n&&(n={order:n});const r=this._groups;Array.isArray(t)||(t=[t]);const o=t.map(e=>Object.freeze({...n,component:e}));r[e]=o}get(e,t){const n=this._groups[e]||[];if(!t||!this.parent)return[...n];const r=this.parent.get(e,"number"==typeof t?t-1:-1),o=[...r,...n];return n.length&&r.length&&o.sort(({order:e},{order:t})=>(e||0)-(t||0)),o}get view(){const e=(e,...t)=>i({...e,insertable:this},...t);return t.mName("Insertable",e),t.mSimple(e),Reflect.defineProperty(this,"view",{value:e,enumerable:!0,configurable:!0}),e}static get install(){return c}static get View(){return i}static get version(){return"0.1.0-alpha.2"}}e.InsertView=i,e.default=a,e.install=c,e.version="0.1.0-alpha.2",Object.defineProperty(e,"__esModule",{value:!0})}));
