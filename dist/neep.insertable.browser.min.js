/*!
 * NeepInsertable v0.1.0-alpha.0
 * (c) 2020 Fierflame
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("@neep/core")):"function"==typeof define&&define.amd?define(["@neep/core"],t):(e=e||self).NeepInsertable=t(e.Neep)}(this,(function(e){"use strict";function t(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function r(e){Reflect.defineProperty(e,"insertable",{value:e.delivered.__NeepInsertable__,enumerable:!0,configurable:!0})}function n(e,{insertable:t,childNodes:r},{createElement:n,Deliver:o}){const{name:s,insertable:c}=e;if(!s&&c instanceof i)return n(o,{__NeepInsertable__:c},...r);if(!s)return r;if(c instanceof i){const t=c.get(s);return t?n(o,{__NeepInsertable__:c},t.map(t=>n(t.component,e,...r))):null}if(!(t instanceof i))return r;const a=t.get(s);return a?a.map(t=>n(t.component,e,...r)):null}function o(e){}e.mSimple(n),e.mName("InsertView",n),e.register("InsertView",n),e.register("insert-view",n),e.addContextConstructor(r);class i{constructor(r){t(this,"parent",void 0),t(this,"_groups",e.encase(Object.create(null))),r instanceof i&&(this.parent=r)}add(e,t,r={}){"number"==typeof r&&(r={order:r});const n=this._groups;Array.isArray(t)||(t=[t]);const o=n[e]?[...n[e]]:[];o.push(...t.map(e=>Object.freeze({...r,component:e}))),o.sort(({order:e},{order:t})=>(e||0)-(t||0)),n[e]=o}remove(e,t){const r=this._groups,n=r[e];if(!n)return;if(!t)return void(r[e]=[]);const o=n.findIndex(e=>e.component===t);if(o<0)return;const i=[...n.slice(0,o),...n.slice(o+1)];r[e]=i}set(e,t,r={}){"number"==typeof r&&(r={order:r});const n=this._groups;Array.isArray(t)||(t=[t]);const o=t.map(e=>Object.freeze({...r,component:e}));n[e]=o}get(e,t){const r=this._groups[e]||[];if(!t||!this.parent)return[...r];const n=this.parent.get(e,"number"==typeof t?t-1:-1),o=[...n,...r];return r.length&&n.length&&o.sort(({order:e},{order:t})=>(e||0)-(t||0)),o}get view(){const t=(e,...t)=>n({...e,insertable:this},...t);return e.mName("Insertable",t),Reflect.defineProperty(this,"view",{value:t,enumerable:!0,configurable:!0}),t}static get install(){return o}static get View(){return n}}return t(i,"version","0.1.0-alpha.0"),i}));
