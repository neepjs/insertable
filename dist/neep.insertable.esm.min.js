/*!
 * NeepInsertable v0.1.0-alpha.2
 * (c) 2020 Fierflame
 * @license MIT
 */
import{mSimple as e,mName as t}from"@neep/core";function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}let n,o,i,s,c,a;function u(e){Reflect.defineProperty(e,"insertable",{value:e.delivered(a),enumerable:!0,configurable:!0})}function l(e,{insertable:t,childNodes:r}){const{name:n,insertable:o}=e;if(!n&&o instanceof m)return i(a,{value:o},...r);if(!n)return r;if(o instanceof m){const t=o.get(n);return t?i(a,{value:o},t.map(t=>i(t.component,e,...r))):null}if(!(t instanceof m))return r;const s=t.get(n);return s?s.map(t=>i(t.component,e,...r)):null}e(l),t("InsertView",l);var f=[function(){o("InsertView",l),o("insert-view",l)},function(){c(u)},function(){a=s()}];function p(e){!function(e){({encase:n,register:o,createElement:i,createDeliver:s,addContextConstructor:c}=e)}(e);for(const e of f)e()}const d="0.1.0-alpha.2";class m{constructor(e){r(this,"parent",void 0),r(this,"_groups",n(Object.create(null))),e instanceof m&&(this.parent=e)}add(e,t,r={}){"number"==typeof r&&(r={order:r});const n=this._groups;Array.isArray(t)||(t=[t]);const o=n[e]?[...n[e]]:[];o.push(...t.map(e=>Object.freeze({...r,component:e}))),o.sort(({order:e},{order:t})=>(e||0)-(t||0)),n[e]=o}remove(e,t){const r=this._groups,n=r[e];if(!n)return;if(!t)return void(r[e]=[]);const o=n.findIndex(e=>e.component===t);if(o<0)return;const i=[...n.slice(0,o),...n.slice(o+1)];r[e]=i}set(e,t,r={}){"number"==typeof r&&(r={order:r});const n=this._groups;Array.isArray(t)||(t=[t]);const o=t.map(e=>Object.freeze({...r,component:e}));n[e]=o}get(e,t){const r=this._groups[e]||[];if(!t||!this.parent)return[...r];const n=this.parent.get(e,"number"==typeof t?t-1:-1),o=[...n,...r];return r.length&&n.length&&o.sort(({order:e},{order:t})=>(e||0)-(t||0)),o}get view(){const r=(e,...t)=>l({...e,insertable:this},...t);return t("Insertable",r),e(r),Reflect.defineProperty(this,"view",{value:r,enumerable:!0,configurable:!0}),r}static get install(){return p}static get View(){return l}static get version(){return"0.1.0-alpha.2"}}export default m;export{l as InsertView,p as install,d as version};
